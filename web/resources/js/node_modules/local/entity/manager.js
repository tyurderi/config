/**
 * Class to handle configurations entities.
 * @type {*|Function}
 */
module.exports = Class.create({

    queries: {},

    constructor: function()
    {
        this.register('config', __url('config/load'), [ 'id' ]);
        this.register('table_load', __url('config/fetch'), [ 'id' ]);
        this.register('delete', __url('config/delete'), [ 'id', 'rowId' ]);
    },

    /**
     * @param name string
     * @param args array  Arguments defined by registering this query. Custom can be added via ´.with(name, key)´
     * @returns {*|{submit, with}}
     */
    query: function(name, args)
    {
        var query = this.queries[name],
            data  = {};

        query.data.forEach(function(name, i) {
            data[name] = args[i];
        });

        return this._createQuery(query.url, data);
    },

    register: function(name, url, data)
    {
        this.queries[name] = {
            url: url,
            data: data
        };
    },

    _createQuery: function(url, data)
    {
        data = data || {};

        return {
            submit: function(callback)
            {
                return $.get(url, data, callback);
            },
            with: function(key, value)
            {
                data[key] = value || '';
                return this;
            }
        };
    }

});